"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.story = exports.territory_players = exports.territory_countrys = exports.territory_villages = exports.territory_regions = exports.territory_areas = void 0;
const colors_1 = require("colors");
const utils_1 = require("./../../utils/utils");
const fs = require("fs");
const territory_base_1 = require("./territory_base");
utils_1.database.create_folder_if_not_exist(utils_1.root.DATABASE_TERRITORY);
utils_1.database.create_folder_if_not_exist(utils_1.root.DATABASE_TERRITORY_AREA);
utils_1.database.create_folder_if_not_exist(utils_1.root.DATABASE_TERRITORY_REGION);
utils_1.database.create_folder_if_not_exist(utils_1.root.DATABASE_TERRITORY_VILLAGE);
utils_1.database.create_folder_if_not_exist(utils_1.root.DATABASE_TERRITORY_COUNTRY);
utils_1.database.create_folder_if_not_exist(utils_1.root.DATABASE_TERRITORY_PLAYER);
exports.territory_areas = new Map();
exports.territory_regions = new Map();
exports.territory_villages = new Map();
exports.territory_countrys = new Map();
exports.territory_players = new Map();
//Area
const area_files = fs.readdirSync(utils_1.root.DATABASE_TERRITORY_AREA);
area_files.forEach(file => {
    const data_area_territory_json = utils_1.database.load(utils_1.root.DATABASE_TERRITORY_AREA, file);
    const data_chunk = new territory_base_1.Chunk(data_area_territory_json.chunk.x, data_area_territory_json.chunk.y, data_area_territory_json.chunk.z, data_area_territory_json.chunk.dimention_id);
    // const data_region_owner = new PlayerNameXuid(data_area_territory_json.region_owner?.name,data_area_territory_json.region_owner?.xuid);
    const data_area_territory = new territory_base_1.TerritoryArea(data_chunk, data_area_territory_json.region_name, data_area_territory_json.village_name, data_area_territory_json.country_name);
    exports.territory_areas.set(`${data_area_territory.chunk.get_dxz_chunk_line()}`, data_area_territory);
});
//Region
const region_files = fs.readdirSync(utils_1.root.DATABASE_TERRITORY_REGION);
region_files.forEach(file => {
    const data_region_territory_json = utils_1.database.load(utils_1.root.DATABASE_TERRITORY_REGION, file);
    const data_owner_name_xuid = new territory_base_1.PlayerNameXuid(data_region_territory_json.owner.name, data_region_territory_json.owner.xuid);
    const data_chunk = new territory_base_1.Chunk(data_region_territory_json.spawn_position.x, data_region_territory_json.spawn_position.y, data_region_territory_json.spawn_position.z, data_region_territory_json.spawn_position.dimention_id);
    const data_area_territorys = data_region_territory_json.area_territorys;
    const data_region_territory = new territory_base_1.TerritoryRegion(data_owner_name_xuid, data_chunk, data_area_territorys, data_region_territory_json.region_name, data_region_territory_json.money, data_region_territory_json.assimilate, data_region_territory_json.deposit);
    exports.territory_regions.set(`${data_region_territory.region_name}`, data_region_territory);
});
//Village
const village_files = fs.readdirSync(utils_1.root.DATABASE_TERRITORY_VILLAGE);
village_files.forEach(file => {
    const data_village_territory_json = utils_1.database.load(utils_1.root.DATABASE_TERRITORY_VILLAGE, file);
    const data_owner_name_xuid = new territory_base_1.PlayerNameXuid(data_village_territory_json.owner.name, data_village_territory_json.owner.xuid);
    const data_members_name_xuid = data_village_territory_json.members.map(member => new territory_base_1.PlayerNameXuid(member.name, member.xuid));
    const data_chunk = new territory_base_1.Chunk(data_village_territory_json.spawn_position.x, data_village_territory_json.spawn_position.y, data_village_territory_json.spawn_position.z, data_village_territory_json.spawn_position.dimention_id);
    const data_area_territorys = data_village_territory_json.region_territorys;
    const data_village_territory = new territory_base_1.TerritoryVillage(data_owner_name_xuid, data_members_name_xuid, data_chunk, data_area_territorys, data_village_territory_json.village_name, data_village_territory_json.money, data_village_territory_json.assimilate, data_village_territory_json.deposit);
    exports.territory_villages.set(`${data_village_territory.village_name}`, data_village_territory);
});
//Country
const country_files = fs.readdirSync(utils_1.root.DATABASE_TERRITORY_COUNTRY);
country_files.forEach(file => {
    const data_country_territory_json = utils_1.database.load(utils_1.root.DATABASE_TERRITORY_COUNTRY, file);
    const data_owner_name_xuid = new territory_base_1.PlayerNameXuid(data_country_territory_json.owner.name, data_country_territory_json.owner.xuid);
    const data_members_name_xuid = data_country_territory_json.members.map(member => new territory_base_1.PlayerNameXuid(member.name, member.xuid));
    const data_chunk = new territory_base_1.Chunk(data_country_territory_json.spawn_position.x, data_country_territory_json.spawn_position.y, data_country_territory_json.spawn_position.z, data_country_territory_json.spawn_position.dimention_id);
    const data_area_territorys = data_country_territory_json.village_territorys;
    const data_country_territory = new territory_base_1.TerritoryCountry(data_owner_name_xuid, data_members_name_xuid, data_chunk, data_area_territorys, data_country_territory_json.country_name, data_country_territory_json.money, data_country_territory_json.assimilate, data_country_territory_json.deposit);
    exports.territory_countrys.set(`${data_country_territory.country_name}`, data_country_territory);
});
//Player
const player_files = fs.readdirSync(utils_1.root.DATABASE_TERRITORY_PLAYER);
player_files.forEach(file => {
    const data_player_territory_json = utils_1.database.load(utils_1.root.DATABASE_TERRITORY_PLAYER, file);
    const data_owner_name_xuid = new territory_base_1.PlayerNameXuid(data_player_territory_json.owner.name, data_player_territory_json.owner.xuid);
    const data_members_name_xuid = data_player_territory_json.friends.map(friend => new territory_base_1.PlayerNameXuid(friend.name, friend.xuid));
    const data_player_territory = new territory_base_1.TerritoryPlayer(data_owner_name_xuid, data_members_name_xuid, data_player_territory_json.money, data_player_territory_json.assimilate, data_player_territory_json.deposit, data_player_territory_json.belong_region, data_player_territory_json.belong_village, data_player_territory_json.belong_country);
    exports.territory_players.set(`${data_player_territory.owner.xuid}`, data_player_territory);
});
utils_1.console_message.dos_log_server("nations_command 1 Loading", colors_1.yellow, 2);
require("./command/overload/pioneer_command");
utils_1.console_message.dos_log_server("nations_command 1 Loaded", colors_1.green, 2);
utils_1.console_message.dos_log_server("nations_command 2 Loading", colors_1.yellow, 2);
require("./command/overload/region_command");
utils_1.console_message.dos_log_server("nations_command 2 Loaded", colors_1.green, 2);
utils_1.console_message.dos_log_server("nations_command 3 Loading", colors_1.yellow, 2);
require("./command/overload/village_command");
utils_1.console_message.dos_log_server("nations_command 3 Loaded", colors_1.green, 2);
utils_1.console_message.dos_log_server("events Loading", colors_1.yellow, 2);
require("./events");
utils_1.console_message.dos_log_server("events Loaded", colors_1.green, 2);
utils_1.console_message.dos_log_server("scoreboard Loading", colors_1.yellow, 2);
require("./scoreboard");
utils_1.console_message.dos_log_server("scoreboard Loaded", colors_1.green, 2);
utils_1.database.create_folder_if_not_exist(utils_1.root.DATABASE_STORY);
exports.story = new Map();
const story_files = fs.readdirSync(utils_1.root.DATABASE_STORY);
story_files.forEach(file => {
    const story_class = utils_1.database.load(utils_1.root.DATABASE_STORY, file);
    exports.story.set(`${story_class.player.xuid}`, story_class);
});
utils_1.console_message.dos_log_server("events Loading", colors_1.yellow, 2);
require("./events");
utils_1.console_message.dos_log_server("events Loaded", colors_1.green, 2);
//# sourceMappingURL=data:application/json;base64,