"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.territory_players = exports.territory_countrys = exports.territory_villages = exports.territory_regions = exports.territory_areas = void 0;
const colors_1 = require("colors");
const utils_1 = require("./../../utils/utils");
const fs = require("fs");
const territory_base_1 = require("./territory_base");
utils_1.database.create_folder_if_not_exist(utils_1.root.DATABASE_TERRITORY);
utils_1.database.create_folder_if_not_exist(utils_1.root.DATABASE_TERRITORY_AREA);
utils_1.database.create_folder_if_not_exist(utils_1.root.DATABASE_TERRITORY_REGION);
utils_1.database.create_folder_if_not_exist(utils_1.root.DATABASE_TERRITORY_VILLAGE);
utils_1.database.create_folder_if_not_exist(utils_1.root.DATABASE_TERRITORY_COUNTRY);
utils_1.database.create_folder_if_not_exist(utils_1.root.DATABASE_TERRITORY_PLAYER);
exports.territory_areas = new Map();
exports.territory_regions = new Map();
exports.territory_villages = new Map();
exports.territory_countrys = new Map();
exports.territory_players = new Map();
//Area
const area_files = fs.readdirSync(utils_1.root.DATABASE_TERRITORY_AREA);
area_files.forEach(file => {
    const data_area_territory_json = utils_1.database.load(utils_1.root.DATABASE_TERRITORY_AREA, file);
    const data_owner_name_xuid = new territory_base_1.PlayerNameXuid(data_area_territory_json.owner.name, data_area_territory_json.owner.xuid);
    const data_chunk = new territory_base_1.Chunk(data_area_territory_json.chunk.x, data_area_territory_json.chunk.y, data_area_territory_json.chunk.z, data_area_territory_json.chunk.dimention_id);
    const data_area_territory = new territory_base_1.TerritoryArea(data_owner_name_xuid, data_chunk);
    exports.territory_areas.set(`${data_area_territory.chunk.get_dxz_chunk_line()}`, data_area_territory);
});
//Region
const region_files = fs.readdirSync(utils_1.root.DATABASE_TERRITORY_REGION);
region_files.forEach(file => {
    const data_region_territory_json = utils_1.database.load(utils_1.root.DATABASE_TERRITORY_REGION, file);
    const data_owner_name_xuid = new territory_base_1.PlayerNameXuid(data_region_territory_json.owner.name, data_region_territory_json.owner.xuid);
    const data_chunk = new territory_base_1.Chunk(data_region_territory_json.spawn_position.x, data_region_territory_json.spawn_position.y, data_region_territory_json.spawn_position.z, data_region_territory_json.spawn_position.dimention_id);
    const data_area_territorys = data_region_territory_json.area_territorys;
    const data_region_territory = new territory_base_1.TerritoryRegion(data_owner_name_xuid, data_chunk, data_area_territorys, data_region_territory_json.region_name, data_region_territory_json.money, data_region_territory_json.assimilate, data_region_territory_json.deposit);
    exports.territory_regions.set(`${data_region_territory.region_name}`, data_region_territory);
});
//Village
const village_files = fs.readdirSync(utils_1.root.DATABASE_TERRITORY_VILLAGE);
village_files.forEach(file => {
    const data_village_territory_json = utils_1.database.load(utils_1.root.DATABASE_TERRITORY_VILLAGE, file);
    const data_owner_name_xuid = new territory_base_1.PlayerNameXuid(data_village_territory_json.owner.name, data_village_territory_json.owner.xuid);
    const data_members_name_xuid = data_village_territory_json.members.map(member => new territory_base_1.PlayerNameXuid(member.name, member.xuid));
    const data_chunk = new territory_base_1.Chunk(data_village_territory_json.spawn_position.x, data_village_territory_json.spawn_position.y, data_village_territory_json.spawn_position.z, data_village_territory_json.spawn_position.dimention_id);
    const data_area_territorys = data_village_territory_json.region_territorys;
    const data_village_territory = new territory_base_1.TerritoryVillage(data_owner_name_xuid, data_members_name_xuid, data_chunk, data_area_territorys, data_village_territory_json.village_name, data_village_territory_json.money, data_village_territory_json.assimilate, data_village_territory_json.deposit);
    exports.territory_villages.set(`${data_village_territory.village_name}`, data_village_territory);
});
//Country
const country_files = fs.readdirSync(utils_1.root.DATABASE_TERRITORY_COUNTRY);
country_files.forEach(file => {
    const data_country_territory_json = utils_1.database.load(utils_1.root.DATABASE_TERRITORY_COUNTRY, file);
    const data_owner_name_xuid = new territory_base_1.PlayerNameXuid(data_country_territory_json.owner.name, data_country_territory_json.owner.xuid);
    const data_members_name_xuid = data_country_territory_json.members.map(member => new territory_base_1.PlayerNameXuid(member.name, member.xuid));
    const data_chunk = new territory_base_1.Chunk(data_country_territory_json.spawn_position.x, data_country_territory_json.spawn_position.y, data_country_territory_json.spawn_position.z, data_country_territory_json.spawn_position.dimention_id);
    const data_area_territorys = data_country_territory_json.village_territorys;
    const data_country_territory = new territory_base_1.TerritoryCountry(data_owner_name_xuid, data_members_name_xuid, data_chunk, data_area_territorys, data_country_territory_json.country_name, data_country_territory_json.money, data_country_territory_json.assimilate, data_country_territory_json.deposit);
    exports.territory_countrys.set(`${data_country_territory.country_name}`, data_country_territory);
});
//Player
const player_files = fs.readdirSync(utils_1.root.DATABASE_TERRITORY_PLAYER);
player_files.forEach(file => {
    const data_player_territory_json = utils_1.database.load(utils_1.root.DATABASE_TERRITORY_PLAYER, file);
    const data_owner_name_xuid = new territory_base_1.PlayerNameXuid(data_player_territory_json.owner.name, data_player_territory_json.owner.xuid);
    const data_members_name_xuid = data_player_territory_json.friends.map(friend => new territory_base_1.PlayerNameXuid(friend.name, friend.xuid));
    const data_player_territory = new territory_base_1.TerritoryPlayer(data_owner_name_xuid, data_members_name_xuid, data_player_territory_json.money, data_player_territory_json.assimilate, data_player_territory_json.deposit, data_player_territory_json.belong_region, data_player_territory_json.belong_village, data_player_territory_json.belong_country);
    exports.territory_players.set(`${data_player_territory.owner.xuid}`, data_player_territory);
});
utils_1.console_message.dos_log_server("nations_command Loading", colors_1.yellow, 2);
require("./command/overload/pioneer_command");
utils_1.console_message.dos_log_server("nations_command Loaded", colors_1.green, 2);
utils_1.console_message.dos_log_server("nations_command Loading", colors_1.yellow, 2);
require("./command/overload/region_command");
utils_1.console_message.dos_log_server("nations_command Loaded", colors_1.green, 2);
utils_1.console_message.dos_log_server("events Loading", colors_1.yellow, 2);
require("./events");
utils_1.console_message.dos_log_server("events Loaded", colors_1.green, 2);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJpbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSxtQ0FBdUM7QUFDdkMsK0NBQXNFO0FBQ3RFLHlCQUF5QjtBQUN6QixxREFBOEk7QUFFOUksZ0JBQVEsQ0FBQywwQkFBMEIsQ0FBQyxZQUFJLENBQUMsa0JBQWtCLENBQUMsQ0FBQztBQUM3RCxnQkFBUSxDQUFDLDBCQUEwQixDQUFDLFlBQUksQ0FBQyx1QkFBdUIsQ0FBQyxDQUFDO0FBQ2xFLGdCQUFRLENBQUMsMEJBQTBCLENBQUMsWUFBSSxDQUFDLHlCQUF5QixDQUFDLENBQUM7QUFDcEUsZ0JBQVEsQ0FBQywwQkFBMEIsQ0FBQyxZQUFJLENBQUMsMEJBQTBCLENBQUMsQ0FBQztBQUNyRSxnQkFBUSxDQUFDLDBCQUEwQixDQUFDLFlBQUksQ0FBQywwQkFBMEIsQ0FBQyxDQUFDO0FBQ3JFLGdCQUFRLENBQUMsMEJBQTBCLENBQUMsWUFBSSxDQUFDLHlCQUF5QixDQUFDLENBQUM7QUFFdkQsUUFBQSxlQUFlLEdBQUcsSUFBSSxHQUFHLEVBQXlCLENBQUM7QUFDbkQsUUFBQSxpQkFBaUIsR0FBRyxJQUFJLEdBQUcsRUFBMkIsQ0FBQztBQUN2RCxRQUFBLGtCQUFrQixHQUFHLElBQUksR0FBRyxFQUE0QixDQUFDO0FBQ3pELFFBQUEsa0JBQWtCLEdBQUcsSUFBSSxHQUFHLEVBQTRCLENBQUM7QUFDekQsUUFBQSxpQkFBaUIsR0FBRyxJQUFJLEdBQUcsRUFBMkIsQ0FBQztBQUVwRSxNQUFNO0FBQ04sTUFBTSxVQUFVLEdBQUcsRUFBRSxDQUFDLFdBQVcsQ0FBQyxZQUFJLENBQUMsdUJBQXVCLENBQUMsQ0FBQztBQUNoRSxVQUFVLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxFQUFFO0lBQ3RCLE1BQU0sd0JBQXdCLEdBQWtCLGdCQUFRLENBQUMsSUFBSSxDQUFDLFlBQUksQ0FBQyx1QkFBdUIsRUFBRSxJQUFJLENBQUMsQ0FB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