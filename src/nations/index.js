"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.story_tiles = exports.nations_players = exports.nations_countrys = exports.nations_villages = exports.nations_regions = exports.nations_areas = void 0;
const colors_1 = require("colors");
const utils_1 = require("./../../utils/utils");
const fs = require("fs");
const nations_base_1 = require("./nations_base");
utils_1.database.create_folder_if_not_exist(utils_1.root.DATABASE_NATIONS);
utils_1.database.create_folder_if_not_exist(utils_1.root.DATABASE_NATIONS_AREA);
utils_1.database.create_folder_if_not_exist(utils_1.root.DATABASE_NATIONS_REGION);
utils_1.database.create_folder_if_not_exist(utils_1.root.DATABASE_NATIONS_VILLAGE);
utils_1.database.create_folder_if_not_exist(utils_1.root.DATABASE_NATIONS_COUNTRY);
utils_1.database.create_folder_if_not_exist(utils_1.root.DATABASE_PLAYER);
utils_1.database.create_folder_if_not_exist(utils_1.root.DATABASE_STORY);
// database.create_folder_if_not_exist(root.DATABASE_STORY_DESTROY);
// database.create_folder_if_not_exist(root.DATABASE_STORY_PLACE);
exports.nations_areas = new Map();
exports.nations_regions = new Map();
exports.nations_villages = new Map();
exports.nations_countrys = new Map();
exports.nations_players = new Map();
exports.story_tiles = new Map();
// export const story_place_tiles = new Map<string, number>();
//Area
const area_files = fs.readdirSync(utils_1.root.DATABASE_NATIONS_AREA);
area_files.forEach(file => {
    const data_area_nations_json = utils_1.database.load(utils_1.root.DATABASE_NATIONS_AREA, file);
    const data_chunk = new utils_1.Chunk(data_area_nations_json.chunk.x, data_area_nations_json.chunk.y, data_area_nations_json.chunk.z, data_area_nations_json.chunk.dimention_id);
    // const data_region_owner = new PlayerNameXuid(data_area_nations_json.region_owner?.name,data_area_nations_json.region_owner?.xuid);
    const data_area_nations = new nations_base_1.NationsArea(data_chunk, data_area_nations_json.region_name, data_area_nations_json.village_name, data_area_nations_json.country_name);
    exports.nations_areas.set(`${data_area_nations.chunk.get_dxz_chunk_line()}`, data_area_nations);
});
//Region
const region_files = fs.readdirSync(utils_1.root.DATABASE_NATIONS_REGION);
region_files.forEach(file => {
    const data_region_nations_json = utils_1.database.load(utils_1.root.DATABASE_NATIONS_REGION, file);
    const data_owner_name_xuid = new utils_1.PlayerNameXuid(data_region_nations_json.owner.name, data_region_nations_json.owner.xuid);
    const data_chunk = new utils_1.Chunk(data_region_nations_json.chunk.x, data_region_nations_json.chunk.y, data_region_nations_json.chunk.z, data_region_nations_json.chunk.dimention_id);
    const data_area_nationss = data_region_nations_json.area_nations;
    const data_region_nations = new nations_base_1.NationsRegion(data_owner_name_xuid, data_chunk, data_area_nationss, data_region_nations_json.region_name, data_region_nations_json.belong_village, data_region_nations_json.belong_country, data_region_nations_json.deposit, data_region_nations_json.assimilate, data_region_nations_json.probability);
    exports.nations_regions.set(`${data_region_nations.region_name}`, data_region_nations);
});
//Village
const village_files = fs.readdirSync(utils_1.root.DATABASE_NATIONS_VILLAGE);
village_files.forEach(file => {
    const data_village_nations_json = utils_1.database.load(utils_1.root.DATABASE_NATIONS_VILLAGE, file);
    const data_owner_name_xuid = new utils_1.PlayerNameXuid(data_village_nations_json.owner.name, data_village_nations_json.owner.xuid);
    const data_members_name_xuid = data_village_nations_json.members.map(member => new utils_1.PlayerNameXuid(member.name, member.xuid));
    const data_chunk = new utils_1.Chunk(data_village_nations_json.chunk.x, data_village_nations_json.chunk.y, data_village_nations_json.chunk.z, data_village_nations_json.chunk.dimention_id);
    const data_area_nationss = data_village_nations_json.region_nations;
    const data_village_nations = new nations_base_1.NationsVillage(data_owner_name_xuid, data_members_name_xuid, data_chunk, data_area_nationss, data_village_nations_json.village_name, data_village_nations_json.belong_country, data_village_nations_json.deposit, data_village_nations_json.assimilate, data_village_nations_json.probability);
    exports.nations_villages.set(`${data_village_nations.village_name}`, data_village_nations);
});
//Country
const country_files = fs.readdirSync(utils_1.root.DATABASE_NATIONS_COUNTRY);
country_files.forEach(file => {
    const data_country_nations_json = utils_1.database.load(utils_1.root.DATABASE_NATIONS_COUNTRY, file);
    const data_owner_name_xuid = new utils_1.PlayerNameXuid(data_country_nations_json.owner.name, data_country_nations_json.owner.xuid);
    const data_members_name_xuid = data_country_nations_json.members.map(member => new utils_1.PlayerNameXuid(member.name, member.xuid));
    const data_chunk = new utils_1.Chunk(data_country_nations_json.chunk.x, data_country_nations_json.chunk.y, data_country_nations_json.chunk.z, data_country_nations_json.chunk.dimention_id);
    const data_area_nationss = data_country_nations_json.village_nations;
    const data_country_nations = new nations_base_1.NationsCountry(data_owner_name_xuid, data_members_name_xuid, data_chunk, data_area_nationss, data_country_nations_json.country_name, data_country_nations_json.deposit, data_country_nations_json.assimilate, data_country_nations_json.probability);
    exports.nations_countrys.set(`${data_country_nations.country_name}`, data_country_nations);
});
//Player
const player_files = fs.readdirSync(utils_1.root.DATABASE_PLAYER);
player_files.forEach(file => {
    const data_player_nations_json = utils_1.database.load(utils_1.root.DATABASE_PLAYER, file);
    const data_owner_name_xuid = new utils_1.PlayerNameXuid(data_player_nations_json.owner.name, data_player_nations_json.owner.xuid);
    const data_members_name_xuid = data_player_nations_json.friends.map(friend => new utils_1.PlayerNameXuid(friend.name, friend.xuid));
    const data_player_nations = new nations_base_1.NationsPlayer(data_player_nations_json.ban, data_owner_name_xuid, data_members_name_xuid, data_player_nations_json.belong_region, data_player_nations_json.belong_village, data_player_nations_json.belong_country, data_player_nations_json.deposit, data_player_nations_json.assimilate, data_player_nations_json.probability);
    exports.nations_players.set(`${data_player_nations.owner.xuid}`, data_player_nations);
});
const story_files = fs.readdirSync(utils_1.root.DATABASE_STORY);
story_files.forEach(file => {
    const data_story_tile = utils_1.database.load(utils_1.root.DATABASE_STORY, file);
    exports.story_tiles.set(file.replace(".json", ""), data_story_tile);
});
// const story_place_files = fs.readdirSync(root.DATABASE_STORY_PLACE);
// story_place_files.forEach(file => {
//     const data_story_tile = database.load(root.DATABASE_STORY_PLACE, file);
//     story_place_tiles.set(file.replace(".json", ""), data_story_tile);
// });
utils_1.console_message.dos_log_server("nations_command pioneer Loading", colors_1.yellow, 2);
require("./command/overload/pioneer_command");
utils_1.console_message.dos_log_server("nations_command pioneer Loaded", colors_1.green, 2);
utils_1.console_message.dos_log_server("nations_command region Loading", colors_1.yellow, 2);
require("./command/overload/region_command");
utils_1.console_message.dos_log_server("nations_command region Loaded", colors_1.green, 2);
// console_message.dos_log_server("nations_command village Loading", yellow, 2);
// import "./command/overload/village_command";
// console_message.dos_log_server("nations_command village Loaded", green, 2);
// console_message.dos_log_server("nations_command country Loading", yellow, 2);
// import "./command/overload/country_command";
// console_message.dos_log_server("nations_command country Loaded", green, 2);
utils_1.console_message.dos_log_server("friend Loading", colors_1.yellow, 2);
require("./command/overload/friend_command");
utils_1.console_message.dos_log_server("friend Loaded", colors_1.green, 2);
utils_1.console_message.dos_log_server("events Loading", colors_1.yellow, 2);
require("./events");
utils_1.console_message.dos_log_server("events Loaded", colors_1.green, 2);
utils_1.console_message.dos_log_server("scoreboard Loading", colors_1.yellow, 2);
require("./scoreboard");
utils_1.console_message.dos_log_server("scoreboard Loaded", colors_1.green, 2);
//# sourceMappingURL=data:application/json;base64,